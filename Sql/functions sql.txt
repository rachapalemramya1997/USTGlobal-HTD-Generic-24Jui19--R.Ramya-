************functions*************
//function is a set of statements which performs a specified task
//every function has some attributes
function attributes:
=> it has input argument function name and return type
******=>sql has predefined functions.these are two types
   1, scalar function (single row function)       =>inputs equals to outputs
   2, aggregate function (multi rowed function)   =>we pass more than one input but the output is only one

*************************multi row function*************************
2,                            ________
           input---->|                  |
           input---->|function  |---->output
           input---->|________|

******* =>Aggregate Functions types:
    1 Avg()-returns average value
    2 count()-it counts the number of rows
    3 max()-returns maximum value of the selected column
    4 min()-returns minimum value of the selected column
    5 sum()-returns sum of all values of the selected column 

1,//write a query to display the average salary of employee_info
     select avg(salary) from employee_info;
2,//write a query to display the sum of all salary of employee_info
     select sum(salary) from employee_info;
3,//write a query to display the minimum salary of employee_info
     select min(salary) from employee_info;
4,//write a query to display the maximum salary of employee_info
      select max(salary) from employee_info; 
5,//write a query to display the count salary of employee_info 
       select count(salary) from employee_info;
6,//write a query to display the count maximum minimum sum average salary of employee_info  
      select count(salary),min(salary),max(salary),sum(salary),avg(salary) from employee_info;
7,//write a query to display the count maximum minimum sum average salary of employee_info with aliasing
      select count(salary) counting,min(salary) minimum,max(salary) maximum,sum(salary) sum,avg(salary) average from employee_info;  
8,//write a query to display no of employee hired in after 2016
     select count(*) from employee_info where doj>'2016-12-31';
9,//write a query to display average salary and the highest salary of dept 20,30,40 and 60
      select avg(salary),max(salary) from employee_info where deptid in(20,30,40,60);
10,//write a query to display date of first and last hired employee
       select min(doj) first,max(doj) last from employee_info;
11,//write a query to display no of employees who is working in dept 20 and salary is 15000
      select count(*) from employee_info where deptid=20 and salary=15000;
        

***************************single row function*************************
1,                            ________
           input---->|                  |---->output
           input---->|function  |---->output
           input---->|________|---->output

******* =>single row Functions types:
     1, upper()-it converts all strings into upper case
     2,lower()-it converts strings into lower case
     3,length()-it returns the length of the value of a textfield
     4,concat()-it used to concatinate two strings 
     5,reverse()-it is used to reverse the string

***//scalar function is divided into two types
    =>   1.case manipulation function
          1.upper()   
                  // select upper(name) from employee_info;
          2.lower()
                  // select lower(name) from employee_info;
          3.initcap()
                // it not supported in mysql.it is supported in oracle
    =>   2.character manipulation function

**///length()
1,//write a query to display the length of name 
      select length(name) from employee_info;

**///concat
2,//write a query to merge name and salary
      select concat(name,salary) from employee_info;

**///reverse
3,//write a query to reverse name
      select reverse(name) from employee_info;


**///subsring => it is a function used to extract a string from given string
            => it can accept three arguments
   syntax: select substr(string,position,length) from table; 

4,//write a query to display name of the employee with only 3 characters
       select substr(name,1,3) from employee_info;
5,//write a query to display all the details of employee whose name begins with consonant
       select * from employee_info where substr(name,1,1) not in('a','e','i','o','u');


**///instring => it is used to check weather substring is present into a given string or not
            => if a substring is not present into a given string then function will return 0
            => it is used to display positions
   syntax: select instr(string,substring) from table;     // arg 1,it is a string in which substring has to be search.

6,//write a query to search position of a in the name column
       select instr(name,'a') from employee_info;

**///replace => it is used to replace substring in a given string with a new string
           => it can accept 3 arguments
    syntax: select replace(string,substr1,substr2) from table;

7,//write a query to replace where a is present in the name with z
     select replace(name,'a','z') from employee_info;


8,//write a query to display all the employee details who is working in dept 30 and salary is 15000
     select * from employee_info where deptid=30 and salary=15000;


**********///group by clause//**********
 => this statement group rows that have the same values into summary rows.
 => it is often used with aggregate functions.
 =>syntax:  select column name(s) from table name where condition group by column name(s);
                                              ________
        group of input---->|                  |---->group of output
        group of input---->|function  |---->group of output
        group of input---->|________|---->group of output
***note: 
  group by clause executes row by row after the execution of group by the records are group therefore all the clause will 
 execute after the execution of group by clause.group by clause executes.
****order of execution  from,where,group by,select  

1,//write a query to display no of deptments
      select count(*) from employee_info group by deptid;
2,//write a query to display highest salary of employee in each department
      select max(salary) from employee_info group by deptid;
3,//write a query to display no of software developer working in each department
      select count(*) from employee_info where designation='software developer' group by deptid;
4,//write a query to display no of employee hired on each date
      select count(*) from employee_info group by doj;
5,//write a query to display min salary in each designation 
      select min(salary) from employee_info group by designation;


************having clause************

=> it is often used with group by clause to filter groups based on specified condition.
=>in having clause we can use only use an column i.e used in group by clause.
=>   syntax: select column name(s) from table name where condition group by column name(s) having condition;
****order of execution  from,where,group by,having,select  
**note:
      => having clause executes after the execution of group by clause therefore it checks the given condition after group by.
      => having clause executes group by group.
      => having clause only used a column that is used by group by.  

1,//write a query to display deptno which has atleast four working employees
      select deptid from employee_info group by deptid having count(*)>=4;
2,//write a query to display deptno which has total salary > 20000
      select sum(salary) from employee_info group by deptid having sum(salary)>20000;
       // select sum(salary),deptid from employee_info group by deptid having sum(salary)>20000;
3,//write a query to display deptno and avg salary of all the departments whose average salary is > 20000 excluding the employee whose name begins with 's'
       select avg(salary),deptid from employee_info where name not like 's%' group by deptid having avg(salary)>20000;


*****we can pass more than one row in select clause by using group by clause
 //select avg(salary),deptid,designation from employee_info where name not like 's%' group by deptid,designation having avg(salary)>7000;
 

****************order by clause***********************
=>it is used to sort the result-set in ascending or descending order.
=>it sort the records in ascending order by default. to sort the result in descending order use the desc keyword.
=>    syntax: select column1,column2 from table name order by asc/desc;
****order of execution  from,where,group by,having,select,order by.

**order by clause always executes after the execution of select clause
**order by clause should always last clause to be written in the syntax
**if the group by clause is used then order by clause we can use aggregate or multi row function. only the column names which is used in the group by clause



1,//write a query to display all the results of the employee table salary should be arranged in descending order
      select * from employee_info order by salary desc;
      // select * from employee_info order by salary;
2,//write a query to display name designation doj for all employees who are working in either one of the departments 10,20,60,50 and sort the 
records in descending order of their salary
     select name,designation,doj from employee_info where deptid in(10,20,60,50) order by salary desc;
3,//write a query to display deptid along with no of employee in it
      select count(*),deptid from employee_info group by deptid;



1,write a query to display the employees working in dept 20
   select * from employee_info where deptid=20;
2,write a query to display the employees earning more than rs 2500
   select * from employee_info where salary>2500;
3,write a query to display the employees whose job type is software developer
    select * from employee_info where designation='software developer';
4,write a query to display the employees working in dept 10 20 and 40
    select * from employee_info where deptid in(10,20,40);
5,write a query to display the employees whose name starts with 's'
     select * from employee_info where name like 's%';
6,write a query to display the employees whose firstname is having letter 'l' as 2nd character
     select * from employee_info where name like '_l%';
7,write a query to display the employees whose firstname is having atleast 2 'A' character
     select * from employee_info where name like '%a%a%';
8,write a query to display the employees whose lastname is having letter 'E' as 2nd last character
     select * from employee_info where name like '%e_';
9,write a query to display the employees who are having exactly 5 characters in their last name
    select * from employee_info where name like '_____';
10,write a query to display the employees whose salary is between 20000 and 30000
    select * from employee_info where salary between 20000 and 30000;




1,write a query to display the employee details of the software developer in dept 30
     select * from employee_info where designation='software developer' and deptid=30;
2,write a query to display list all the software developer in dept number 40 and having salary greater than 5000
     select * from employee_info where designation='software developer' and deptid=40 and salary>5000;
3,write a query to display list all the employees except those who are working in dept 10 and 20
      select * from employee_info where deptid not in(10,20);
4,write a query to display list all the employees who are working as software developer and clerks in dept 10 and 20 with a salary in the range of 1000 to 3000
      select * from employee_info where designation not in ('software developer','clerk') and deptid in(10,20) and salary between 1000 and 3000;
5,write a query to display list all the employees whose salary is not in the range of 10000 to 20000 in dept 10,20,30 except all salesman
      select * from employee_info where deptid in(10,20,30) and salary not between 10000 and 20000 and designation!='salesman'; 
6,write a query to display list all the employees by their salary in descending order
      select * from employee_info order by salary desc;
7,write a query to display the maximum salary,minimum salary and total salary from employee
      select max(salary),min(salary),sum(salary) from employee_info;
8,write a query to display the list of the number of software developer in department 20
      select count(*) from employee_info where deptid=20 and designation='software developer';
9,write a query to display the list of the highest and lowest salary earned by salesman
      select count(*),max(salary),min(salary) from employee_info where designation='salesman';
10,write a query to display the total salary of all departments
      select sum(salary) totalsal from employee_info;
    // select sum(salary) from employee_info group by designation;
























































         